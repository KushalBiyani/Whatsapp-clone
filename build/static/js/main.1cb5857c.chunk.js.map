{"version":3,"sources":["firebase.js","components/SidebarChat/index.js","authContext.js","components/Sidebar/index.js","actions/sendingActions.js","components/Chat.js","components/UserChat.js","components/Login/index.js","components/PrivateRoute/index.js","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","GoogleAuthProvider","SidebarChat","userid","roomid","name","addNewChat","profileImage","currentUser","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","setCurrentUser","loading","setLoading","onAuthStateChanged","user","value","logout","signOut","signInWithGoogle","googleProvider","signInWithPopup","then","uid","set","displayName","profileUrl","photoURL","createdAt","Date","Provider","Sidebar","props","rooms","setRooms","users","setUsers","unsubscribe","id","unsubscribe1","room","roomUpload","file","roomId","senderId","ref","put","getDownloadURL","url","type","timestamp","FieldValue","serverTimestamp","uid1","uid2","Chat","fileUpload","useRef","input","setInput","useParams","setRoom","showEmojiPicker","setShowEmojiPicker","style","visibility","onChange","e","preventDefault","target","files","IconButton","AttachFile","current","click","ExitToApp","alt","seconds","toString","substring","prevCheck","InsertEmoticon","onSelect","emoji","native","skin","color","title","position","bottom","width","placeholder","Send","UserChat","userId","where","conversations","forEach","push","Login","history","useHistory","a","alert","Button","PrivateRoute","Component","component","rest","render","App","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cb5857c.chunk.js","sourcesContent":["import firebase from \"firebase\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n//GET Below Settings from Firebase > Project Overview > Settings > General > Your apps > Firebase SDK snippet > Config\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDNdMRue_sxo4B6kwb4dFk2oY2GNvrgphI\",\n    authDomain: \"my-whatsapp-aec72.firebaseapp.com\",\n    projectId: \"my-whatsapp-aec72\",\n    storageBucket: \"my-whatsapp-aec72.appspot.com\",\n    messagingSenderId: \"283307162217\",\n    appId: \"1:283307162217:web:1f1452b6e7227d51e400f8\",\n    measurementId: \"G-0222V19JY6\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore(); \n  const auth = firebaseApp.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const storage = firebaseApp.storage()\n  export { auth, provider, storage};\n  export default db;\n","import React, { useEffect, useState } from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport './SidebarChat.css';\r\nimport db from '../../firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SidebarChat({ userid, roomid, name, addNewChat, profileImage , currentUser}) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (roomid) {\r\n            db.collection('rooms').doc(roomid).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n        else if (userid) {\r\n            db.collection('users').doc(userid).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [roomid, userid]);\r\n\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please Enter Name for Chat\");\r\n\r\n        if (roomName) {\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n                seed: Math.floor(Math.random() * 5000)\r\n            })\r\n        }\r\n    };\r\n\r\n    if (!addNewChat) {\r\n        if (userid) {\r\n            return (\r\n                <Link to={`/users/${currentUser}/${userid}`} key={userid}>\r\n                    <div className=\"sidebarChat\">\r\n                        <Avatar src={profileImage} />\r\n                        <div className=\"sidebarChat_info\">\r\n                            <h2>{name}</h2>\r\n                            <p>{messages[0]?.message}</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        }\r\n        else if (roomid) {\r\n            return (\r\n                <Link to={`/rooms/${roomid}`} key={roomid}>\r\n                    <div className=\"sidebarChat\">\r\n                        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                        <div className=\"sidebarChat_info\">\r\n                            <h2>{name}</h2>\r\n                            {/* <p>{messages[0]?.message}</p> */}\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        return (\r\n            <div onClick={createChat} className=\"sidebarChat\">\r\n                <h3 className=\"add-new-chat-title\">Add New Chat</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport db, { auth } from \"./firebase\"\r\nimport firebase from \"firebase/app\";\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function signInWithGoogle() {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider()\r\n    return auth.signInWithPopup(googleProvider)\r\n      .then(data => {\r\n        db.collection('users')\r\n          .doc(data.user.uid)\r\n          .set({\r\n            name: data.user.displayName,\r\n            uid: data.user.uid,\r\n            profileUrl: data.user.photoURL,\r\n            createdAt: new Date()\r\n          })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    logout,\r\n    signInWithGoogle\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n//import {SearchOutlined , DonutLarge , Chat , MoreVert} from \"@material-ui/icons\";\r\nimport SidebarChat from \"../SidebarChat\";  \r\nimport db from \"../../firebase\";\r\nimport { useAuth } from \"../../authContext\";\r\n\r\nfunction Sidebar(props) {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n    const unsubscribe1 = db.collection(\"users\").onSnapshot((snapshot) =>\r\n      setUsers(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    );\r\n    return () => {\r\n      unsubscribe();\r\n      unsubscribe1();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar_header\">\r\n        <Avatar src={currentUser?.photoURL} />\r\n        <div className=\"sidebar_headerRight\">\r\n          {currentUser.displayName}\r\n          {/* <IconButton>\r\n                        <DonutLarge/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <Chat/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton> */}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"sidebar_chats\">\r\n        <SidebarChat addNewChat />\r\n        <hr />\r\n        {users.map(\r\n          (user) =>\r\n            currentUser.uid !== user.id && (\r\n              <SidebarChat\r\n                key={user.id}\r\n                userid={user.id}\r\n                name={user.data.name}\r\n                profileImage={user.data.profileUrl}\r\n                currentUser={currentUser.uid}\r\n              />\r\n            )\r\n        )}\r\n        {rooms.map((room) => (\r\n          <SidebarChat key={room.id} roomid={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import db, { storage } from '../firebase';\r\nimport firebase from 'firebase';\r\n\r\nexport const roomUpload = (file, currentUser, roomId, senderId) => {\r\n    if (roomId) {\r\n        const uploadTask = storage\r\n            .ref(`/files/${currentUser.uid}/${file.name}`)\r\n            .put(file)\r\n        uploadTask.snapshot.ref.getDownloadURL().then(url => {\r\n            db.collection('rooms').doc(roomId).collection('messages').add({\r\n                type: \"file\",\r\n                message: url,\r\n                name: currentUser.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        })\r\n    }\r\n    else {\r\n        const uploadTask = storage\r\n        .ref(`/files/${currentUser.uid}/${file.name}`)\r\n        .put(file)\r\n    uploadTask.snapshot.ref.getDownloadURL().then(url => {\r\n        db.collection('messages').add({\r\n            type: \"file\",\r\n            message: url,\r\n            name: currentUser.displayName,\r\n            uid1: senderId,\r\n            uid2: currentUser.uid,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n    })\r\n    }\r\n}","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, ExitToApp, InsertEmoticon, Send } from '@material-ui/icons';\r\nimport './Chat.css';\r\nimport Sidebar from './Sidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuth } from \"../authContext\"\r\nimport { roomUpload } from \"../actions/sendingActions\"\r\nimport { Picker } from 'emoji-mart'\r\n\r\nfunction Chat() {\r\n    const fileUpload = useRef(null)\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [room, setRoom] = useState({});\r\n    const [messages, setMessages] = useState([]);\r\n    const { currentUser, logout } = useAuth();\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoom(snapshot.data());\r\n            });\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            });\r\n\r\n        }\r\n    }, [roomId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (input) {\r\n            db.collection('rooms').doc(roomId).collection('messages').add({\r\n                type: \"message\",\r\n                message: input,\r\n                name: currentUser.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        }\r\n        setInput(\"\");\r\n    }\r\n    const handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0]\r\n        roomUpload(file, currentUser, roomId)\r\n    }\r\n    const addEmoji = e => {\r\n        let emoji = e.native;\r\n        setInput(input + emoji)\r\n    };\r\n    const emojiPicker = e =>{\r\n        setShowEmojiPicker(prevCheck => !prevCheck);\r\n    }\r\n    return (\r\n        <div className=\"app_body\">\r\n            <Sidebar />\r\n            <div className='chat'>\r\n                <div className='chat_header'>\r\n                    <Avatar src={`https://avatars.dicebear.com/api/human/${room.seed}.svg`} />\r\n                    <div className='chat_headerInfo'>\r\n                        <h3 className='chat-room-name'>{room.name}</h3>\r\n                    </div>\r\n                    <div className=\"chat_headerRight\">\r\n                        <input type=\"file\" ref={fileUpload}\r\n                            style={{ visibility: 'hidden' }} onChange={handleUpload} />\r\n                        <IconButton >\r\n                            <AttachFile onClick={() => fileUpload.current.click()} />\r\n                        </IconButton>\r\n\r\n                        <IconButton onClick={logout}>\r\n                            <ExitToApp />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                <div className='chat_body'>\r\n                    {messages.map(message => (\r\n                        <p className={`chat_message ${message.name === currentUser.displayName && 'chat_receiver'}`} key={message.timestamp}>\r\n                            <span className=\"chat_name\">{message.name}</span>\r\n                            {message.type === \"message\" ? message.message : <img src={message.message} alt='failed to load'></img>}\r\n                            {message.type === \"message\" && <span className=\"chat_timestemp\">\r\n                                {message.timestamp && new Date(message.timestamp.seconds * 1000).toString().substring(16, 21)}&nbsp;&nbsp;\r\n                            {message.timestamp && new Date(message.timestamp.seconds * 1000).toString().substring(4, 10)}</span>}\r\n                        </p>\r\n                    ))}\r\n                </div>\r\n                <div className='chat_footer'>\r\n                <IconButton onClick={emojiPicker} ><InsertEmoticon/></IconButton>{showEmojiPicker ? (\r\n                        <Picker onSelect={addEmoji} emoji='wink' skin=\"2\" set=\"google\" color=\"#25D366\" title=\"Select the Emoji\" \r\n                        style={{ position: 'absolute', bottom: '85px', width: \"60%\" }}/>\r\n                    ) : null}\r\n\r\n                    <form>\r\n                        <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\r\n                        <IconButton type=\"submit\" onClick={sendMessage}><Send className=\"send\" /></IconButton>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, ExitToApp, InsertEmoticon, Send} from '@material-ui/icons';\r\nimport './Chat.css';\r\nimport Sidebar from './Sidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuth } from \"../authContext\"\r\nimport { roomUpload } from \"../actions/sendingActions\"\r\nimport { Picker } from 'emoji-mart'\r\n\r\nfunction UserChat() {\r\n    const fileUpload = useRef(null)\r\n    const [input, setInput] = useState(\"\");\r\n    const { userId, senderId } = useParams();\r\n    const [users, setUsers] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const { currentUser, logout } = useAuth()\r\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n    useEffect(() => {\r\n        if (userId) {\r\n            db.collection('users').doc(userId).onSnapshot(snapshot => {\r\n                setUsers(snapshot.data());\r\n            });\r\n            db.collection('messages')\r\n                .where('uid1', 'in', [userId, senderId])\r\n                .orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\r\n                    const conversations = [];\r\n                    snapshot.forEach(doc => {\r\n                        if (\r\n                            (doc.data().uid1 === userId && doc.data().uid2 === senderId)\r\n                            ||\r\n                            (doc.data().uid1 === senderId && doc.data().uid2 === userId)\r\n                        ) {\r\n                            conversations.push(doc.data())\r\n                        }\r\n                    });\r\n                    setMessages(conversations)\r\n                });\r\n        }\r\n    }, [userId , senderId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('messages').add({\r\n            message: input,\r\n            name: currentUser.displayName,\r\n            uid1: senderId,\r\n            uid2: userId,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput(\"\");\r\n    }\r\n    const handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0]\r\n        roomUpload(file , currentUser , senderId)\r\n    }\r\n    const addEmoji = e => {\r\n        let emoji = e.native;\r\n        setInput(input + emoji)\r\n    };\r\n    const emojiPicker = e => {\r\n        setShowEmojiPicker(prevCheck => !prevCheck);\r\n    }\r\n\r\n    return (\r\n        <div className=\"app_body\">\r\n            <Sidebar />\r\n            <div className='chat'>\r\n                <div className='chat_header'>\r\n                    <Avatar src={users.profileUrl} />\r\n                    <div className='chat_headerInfo'>\r\n                        <h3 className='chat-room-name'>{users.name}</h3>\r\n                    </div>\r\n                    <div className=\"chat_headerRight\">\r\n                        <input type=\"file\" ref={fileUpload}\r\n                            style={{ visibility: 'hidden' }} onChange={handleUpload} />\r\n                        <IconButton >\r\n                            <AttachFile onClick={() => fileUpload.current.click()} />\r\n                        </IconButton>\r\n\r\n                        <IconButton onClick={logout}>\r\n                            <ExitToApp />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                <div className='chat_body'>\r\n                    {messages.map(message => (\r\n                        <p className={`chat_message ${message.name === currentUser.displayName && 'chat_receiver'}`} key={message.timestamp}>\r\n                            <span className=\"chat_name\">{message.name}</span>\r\n                            {message.type === \"message\" ? message.message : <img src={message.message} alt='failed to load'></img>}\r\n                            {message.type === \"message\" && <span className=\"chat_timestemp\">\r\n                            {message.timestamp && new Date(message.timestamp.seconds * 1000).toString().substring(16, 21)}&nbsp;&nbsp;\r\n                             {message.timestamp && new Date(message.timestamp.seconds * 1000).toString().substring(4, 10)}</span>}\r\n                        </p>\r\n                    ))}\r\n                </div>\r\n                <div className='chat_footer'>\r\n                <IconButton onClick={emojiPicker} ><InsertEmoticon/></IconButton>{showEmojiPicker ? (\r\n                        <Picker onSelect={addEmoji} emoji='wink' skin=\"2\" set=\"google\" color=\"#25D366\" title=\"Select the Emoji\" \r\n                        style={{ position: 'absolute', bottom: '85px', width: \"60%\" }}/>\r\n                    ) : null}\r\n                    <form>\r\n                        <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\r\n                        <IconButton type=\"submit\" onClick={sendMessage}><Send  className=\"send\"/></IconButton>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserChat\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Login.css';\r\nimport { useAuth } from \"../../authContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nfunction Login() {\r\n    const history = useHistory()\r\n    const { signInWithGoogle } = useAuth()\r\n    async function signIn(){\r\n        try {\r\n            await signInWithGoogle()\r\n            history.push(\"/\")\r\n          } catch {\r\n            alert(\"Failed to Login\")\r\n          }\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n           <div className=\"login_container\">\r\n               <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../../authContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import './App.css';\nimport React from 'react';\nimport Chat from './components/Chat';\nimport UserChat from './components/UserChat';\nimport Login from './components/Login';\nimport PrivateRoute from \"./components/PrivateRoute\" \nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { AuthProvider } from \"./authContext\"\nimport 'emoji-mart/css/emoji-mart.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute path=\"/users/:senderId/:userId\" component={UserChat} />\n            <PrivateRoute path=\"/rooms/:roomId\" component={Chat} />\n            <PrivateRoute exact path=\"/\" component={Chat} />\n            <Route path=\"/login\" component={Login} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}
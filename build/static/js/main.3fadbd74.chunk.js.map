{"version":3,"sources":["firebase.js","components/SidebarChat.js","authContext.js","components/Sidebar.js","components/Chat.js","components/UserChat.js","components/Login.js","components/PrivateRoute/index.js","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","GoogleAuthProvider","SidebarChat","userid","roomid","name","addNewChat","profileImage","currentUser","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","setCurrentUser","loading","setLoading","onAuthStateChanged","user","value","logout","signOut","signInWithGoogle","googleProvider","signInWithPopup","then","uid","set","displayName","profileUrl","photoURL","createdAt","Date","Provider","Sidebar","props","rooms","setRooms","users","setUsers","unsubscribe","id","unsubscribe1","IconButton","DonutLarge","MoreVert","SearchOutlined","type","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","length","timestamp","toDate","toUTCString","AttachFile","InsertEmoticon","onChange","e","target","preventDefault","FieldValue","serverTimestamp","UserChat","userId","senderId","where","conversations","forEach","uid1","uid2","push","Login","history","useHistory","a","alert","alt","Button","PrivateRoute","Component","component","rest","render","App","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fadbd74.chunk.js","sourcesContent":["import firebase from \"firebase\";\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n//GET Below Settings from Firebase > Project Overview > Settings > General > Your apps > Firebase SDK snippet > Config\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDNdMRue_sxo4B6kwb4dFk2oY2GNvrgphI\",\n    authDomain: \"my-whatsapp-aec72.firebaseapp.com\",\n    projectId: \"my-whatsapp-aec72\",\n    storageBucket: \"my-whatsapp-aec72.appspot.com\",\n    messagingSenderId: \"283307162217\",\n    appId: \"1:283307162217:web:1f1452b6e7227d51e400f8\",\n    measurementId: \"G-0222V19JY6\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore(); \n  const auth = firebaseApp.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export {auth,provider};\n  export default db;\n","import React, { useEffect, useState } from 'react';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport './SidebarChat.css';\r\nimport db from '../firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SidebarChat({ userid, roomid, name, addNewChat, profileImage , currentUser}) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (roomid) {\r\n            db.collection('rooms').doc(roomid).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n        else if (userid) {\r\n            db.collection('users').doc(userid).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [roomid, userid]);\r\n\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please Enter Name for Chat\");\r\n\r\n        if (roomName) {\r\n            db.collection(\"rooms\").add({\r\n                name: roomName\r\n            })\r\n        }\r\n    };\r\n\r\n    if (!addNewChat) {\r\n        if (userid) {\r\n            return (\r\n                <Link to={`/users/${currentUser}/${userid}`} key={userid}>\r\n                    <div className=\"sidebarChat\">\r\n                        <Avatar src={profileImage} />\r\n                        <div className=\"sidebarChat_info\">\r\n                            <h2>{name}</h2>\r\n                            <p>{messages[0]?.message}</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        }\r\n        else if (roomid) {\r\n            return (\r\n                <Link to={`/rooms/${roomid}`} key={roomid}>\r\n                    <div className=\"sidebarChat\">\r\n                        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                        <div className=\"sidebarChat_info\">\r\n                            <h2>{name}</h2>\r\n                            <p>{messages[0]?.message}</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        return (\r\n            <div onClick={createChat} className=\"sidebarChat\">\r\n                <h3 className=\"add-new-chat-title\">Add New Chat</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport db, { auth } from \"./firebase\"\r\nimport firebase from \"firebase/app\";\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  function signInWithGoogle() {\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider()\r\n    return auth.signInWithPopup(googleProvider)\r\n      .then(data => {\r\n        db.collection('users')\r\n          .doc(data.user.uid)\r\n          .set({\r\n            name: data.user.displayName,\r\n            uid: data.user.uid,\r\n            profileUrl: data.user.photoURL,\r\n            createdAt: new Date()\r\n          })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    logout,\r\n    signInWithGoogle\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, {useState,useEffect} from 'react';\r\nimport './Sidebar.css';\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport {SearchOutlined , DonutLarge , Chat , MoreVert} from \"@material-ui/icons\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from '../firebase';\r\nimport { useAuth } from \"../authContext\"\r\n\r\nfunction Sidebar(props) {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const { currentUser } = useAuth()\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                }\r\n            )\r\n            ))\r\n        ));\r\n        const unsubscribe1 = db.collection('users').onSnapshot(snapshot => (\r\n            setUsers(snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                }\r\n            )\r\n            ))\r\n        ));\r\n        return () => {\r\n            unsubscribe();\r\n            unsubscribe1();\r\n        }\r\n    },[]); \r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={currentUser?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLarge/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <Chat/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input type=\"text\" placeholder=\"Search or start new chat\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {users.map(user=> (\r\n                    currentUser.uid !== user.id && \r\n                    <SidebarChat key={user.id} userid={user.id} name={user.data.name} profileImage={user.data.profileUrl} currentUser={currentUser.uid}/>\r\n                ))}\r\n                {rooms.map(room=> (\r\n                    <SidebarChat key={room.id} roomid={room.id} name={room.data.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, { useState, useEffect } from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, MoreVert, SearchOutlined, InsertEmoticon } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport './Chat.css';\r\nimport Sidebar from './Sidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuth } from \"../authContext\"\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const { currentUser , logout} = useAuth()\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name);\r\n            });\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            });\r\n\r\n        }\r\n    }, [roomId])\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: currentUser.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"app_body\">\r\n        <Sidebar />\r\n            <div className='chat'>\r\n                <div className='chat_header'>\r\n                    <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                    <div className='chat_headerInfo'>\r\n                        <h3 className='chat-room-name'>{roomName}</h3>\r\n                        <p className='chat-room-last-seen'>\r\n                            Last seen {\" \"}\r\n                            {new Date(\r\n                                messages[messages.length - 1]?.timestamp?.toDate()\r\n                            ).toUTCString()}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"chat_headerRight\">\r\n                        <IconButton>\r\n                            <SearchOutlined />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <AttachFile />\r\n                        </IconButton>\r\n                        {/* <IconButton>\r\n                            <MoreVert />\r\n                        </IconButton> */}\r\n                        <button onClick={logout}>Logout</button>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='chat_body'>\r\n                    {messages.map(message => (\r\n                        <p className={`chat_message ${message.name === currentUser.displayName && 'chat_receiver'}`} key={message.timestamp}>\r\n                            <span className=\"chat_name\">{message.name}</span>\r\n                            {message.message}\r\n                            <span className=\"chat_timestemp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                        </p>\r\n                    ))}\r\n                </div>\r\n                <div className='chat_footer'>\r\n                    <InsertEmoticon />\r\n                    <form>\r\n                        <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\r\n                        <button type=\"submit\" onClick={sendMessage}> Send a Message</button>\r\n                    </form>\r\n                    <MicIcon />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, MoreVert, SearchOutlined, InsertEmoticon } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport './Chat.css';\r\nimport Sidebar from './Sidebar';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuth } from \"../authContext\"\r\n\r\nfunction UserChat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const { userId, senderId } = useParams();\r\n    const [users, setUsers] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const { currentUser, logout } = useAuth()\r\n    useEffect(() => {\r\n        if (userId) {\r\n            db.collection('users').doc(userId).onSnapshot(snapshot => {\r\n                setUsers(snapshot.data());\r\n            });\r\n            db.collection('messages')\r\n                .where('uid1', 'in', [userId, senderId])\r\n                .orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\r\n                    const conversations = [];\r\n                    snapshot.forEach(doc => {\r\n                        if (\r\n                            (doc.data().uid1 === userId && doc.data().uid2 === senderId)\r\n                            ||\r\n                            (doc.data().uid1 === senderId && doc.data().uid2 === userId)\r\n                        ) {\r\n                            conversations.push(doc.data())\r\n                        }\r\n                    });\r\n                    setMessages(conversations)\r\n                });\r\n        }\r\n    }, [userId , senderId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('messages').add({\r\n            message: input,\r\n            name: currentUser.displayName,\r\n            uid1: senderId,\r\n            uid2: userId,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"app_body\">\r\n            <Sidebar />\r\n            <div className='chat'>\r\n                <div className='chat_header'>\r\n                    <Avatar src={users.profileUrl} />\r\n                    <div className='chat_headerInfo'>\r\n                        <h3 className='chat-room-name'>{users.name}</h3>\r\n                        <p className='chat-room-last-seen'>\r\n                            Last seen {\" \"}\r\n                            {new Date(\r\n                                messages[messages.length - 1]?.timestamp?.toDate()\r\n                            ).toUTCString()}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"chat_headerRight\">\r\n                        <IconButton>\r\n                            <SearchOutlined />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <AttachFile />\r\n                        </IconButton>\r\n                        {/* <IconButton>\r\n                            <MoreVert />\r\n                        </IconButton> */}\r\n                        <button onClick={logout}>Logout</button>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='chat_body'>\r\n                    {messages.map(message => (\r\n                        <p className={`chat_message ${message.name === currentUser.displayName && 'chat_receiver'}`} key={message.timestamp}>\r\n                            <span className=\"chat_name\">{message.name}</span>\r\n                            {message.message}\r\n                            <span className=\"chat_timestemp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                        </p>\r\n                    ))}\r\n                </div>\r\n                <div className='chat_footer'>\r\n                    <InsertEmoticon />\r\n                    <form>\r\n                        <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\r\n                        <button type=\"submit\" onClick={sendMessage}> Send a Message</button>\r\n                    </form>\r\n                    <MicIcon />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserChat\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Login.css';\r\nimport { useAuth } from \"../authContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nfunction Login() {\r\n    const history = useHistory()\r\n    const { signInWithGoogle } = useAuth()\r\n    async function signIn(){\r\n        try {\r\n            await signInWithGoogle()\r\n            history.push(\"/\")\r\n          } catch {\r\n            alert(\"Failed to Login\")\r\n          }\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n           <div className=\"login_container\">\r\n               <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../../authContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import './App.css';\nimport React from 'react';\nimport Chat from './components/Chat';\nimport UserChat from './components/UserChat';\nimport Login from './components/Login';\nimport PrivateRoute from \"./components/PrivateRoute\"\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { AuthProvider } from \"./authContext\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute path=\"/users/:senderId/:userId\" component={UserChat} />\n            <PrivateRoute path=\"/rooms/:roomId\" component={Chat} />\n            <PrivateRoute exact path=\"/\" component={Chat} />\n            <Route path=\"/login\" component={Login} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}